{"name":"Scalua","tagline":"A wrapper for LuaJ, written in Scala","body":"### Scalua\r\n\r\nScalua is a wrapper for [Luaj 3.0](http://luaj.org/luaj.html), written in Scala.\r\n\r\n### Requirements\r\n\r\n* Scala 2.11.x\r\n* Java 7 or higher\r\n\r\n### Build Configuration\r\n\r\nTo use Scalua as a library dependency, add the following to your build.sbt:\r\n\r\n```scala\r\nresolvers += Resolver.sonatypeRepo(\"snapshots\")\r\n\r\nlibraryDependencies += \"co.technius\" %% \"scalua\" % \"0.0.1-SNAPSHOT\"\r\n```\r\n\r\nPlease note that Scalua is currently still a work-in-progress and is thus only available as a snapshot.\r\n\r\n### Example Usage\r\n\r\n```scala\r\nimport co.technius.scalua._\r\n\r\n// Initialize globals\r\nval g = Globals.standard\r\n\r\n// Load code from a Source\r\nval closure = g.load(scala.io.Source.fromFile(\"mycode.lua\"), \"mycode.lua\")\r\n\r\n// Call a function\r\nclosure.invoke()\r\n\r\n// Construct numbers\r\nval numbers = List(LuaInt(5), LuaDouble(10.3), LuaInt(7))\r\n\r\n// Construct booleans and strings\r\nval others = List(LuaBoolean(true), LuaString(\"Test\"))\r\n\r\n// Construct functions\r\nval myFunction = LuaFunction {\r\n  // Pattern match on Lua Values\r\n  case LuaInt(5) :: List() => List(LuaString(\"Arg is\"), LuaInt(5))\r\n  case List() => List(LuaString(\"No arguments given\"))\r\n  case _ => List(LuaString(\"Incorrect usage\"))\r\n}\r\n\r\n// Return only one argument\r\nval secondFunction = LuaFunction.singleReturn {\r\n  case List() => LuaString(\"No args\")\r\n  case _ => LuaString(\"Some args\")\r\n}\r\n\r\n// Load code from Strings\r\ng.load(\"a = 5\").invoke()\r\n\r\n// Get global variables\r\nprintln(g(\"a\")) // 5\r\n\r\n// Set global variables\r\ng(\"myFunction\") = myFunction\r\ng(\"secondFunction\") = secondFunction\r\n\r\ng.load(\"print('myFunction(): ' .. myFunction())\", \"test.lua\").invoke()\r\ng.load(\"print('secondFunction(123): ' .. secondFunction(123))\", \"test.lua\").invoke()\r\n\r\n// Call Lua functions from Scala\r\nval moreCode = \"\"\"\r\nfunction myLuaFunction(x)\r\n  print(\"x is \" .. x)\r\n  return x * 100\r\nend\r\n\"\"\"\r\ng.load(moreCode).invoke()\r\n// LuaValue extractors\r\nval List(LuaInt(x)) = g(\"myLuaFunction\").invoke(LuaInt(5)) // printed x is 500\r\nprintln(x) // 500\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}